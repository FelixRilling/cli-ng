var clingy=function(){"use strict";const n=(n,t)=>typeof n===t,t=Object,s=Array,i=s.isArray,o=t=>n(t,"undefined"),c=n=>!o(n),e=(n,t)=>c(n[t]),r=n=>o(n)||null===n,u=t=>!r(t)&&n(t,"object"),a=t.entries,f=(n,t)=>n.forEach(t),h=(n,t)=>{f(a(n),(s,i)=>{t(s[0],s[1],i,n)})},m=t=>n(t,"string"),l=s.from,g=t.assign,p=n=>g({},n),d=(n,t)=>{const s=i(n)?l(n):p(n);h(t,(t,i)=>{e(n,t)||(s[t]=i)});return s},A=(n,t)=>{const s={};h(n,(i,o,c)=>{s[i]=t(i,o,c,n)});return s},b=(n,t)=>A(n,(n,s,i,o)=>u(s)?b(s,t):t(n,s,i,o)),w=n=>b(p(n),(n,t)=>u(t)?p(t):t),y=(n,t)=>{const s=i(n)?l(n):w(n);h(t,(t,i)=>{const c=n[t];u(i)?s[t]=u(c)?y(c,i):i:s[t]=o(c)?i:c});return s},E=(n,t)=>{const s=n.length;const i=t.length;if(0===s)return i;if(0===i)return s;const o=[];for(let n=0;n<=i;n++)o[n]=[n];for(let n=0;n<=s;n++)o[0][n]=n;for(let c=1;c<=i;c++){const i=o[c],e=o[c-1];for(let o=1;o<=s;o++)if(t.charAt(c-1)===n.charAt(o-1))i[o]=e[o-1];else{const n=e[o-1]+1,t=i[o-1]+1,s=e[o]+1;i[o]=Math.min(n,t,s)}}return o[i][s]},v=n=>{const t=Object.keys(n).map(n=>Number(n));const s=Math.min(...t);return n[s]},j=(n,t,s=!1)=>{const i={};t.forEach(t=>{const s=E(n,t);i[s]?i[s].push(t):i[s]=[t]});return s?i:v(i)},C=n=>({name:`arg${n}`,required:!0,default:null}),M=n=>({name:`command${n}`,fn:()=>{},alias:[],args:[],sub:null}),O=n=>{const t=new Map(n);n.forEach(n=>{n.alias.forEach(s=>{if(t.has(s))throw new Error(`Alias ${s} conflicts with a previously defined key`);t.set(s,n)})});return t},S=(n,t)=>{const s={args:{_all:t},missing:[]};n.forEach((n,i)=>{const o=t[i];o?s.args[n.name]=o:n.required?s.missing.push(n):s.args[n.name]=n.default});return s},k=/\s/,q=(n,t)=>{const s=[];let i=[];let o=!1;n.split("").forEach((c,e)=>{const r=k.test(c);t.includes(c)?o=!o:!o&&r||i.push(c);(i.length>0&&r&&!o||e===n.length-1)&&(s.push(i.join("")),i=[])});return s},D=(n,t)=>{const s=n.trim();return null!==t?q(s,t):s.split(k)},L={caseSensitive:!0,validQuotes:['"']},Q=(n,t)=>new Map(n.map((n,s)=>{if(!m(n[0]))throw new TypeError(`command key '${n[0]}' is not a string`);const i=t?n[0]:n[0].toLowerCase();const o=y(n[1],M(s));o.name=i;o.args=o.args.map((n,t)=>d(n,C(t)));null!==o.sub&&(o.sub=new N(o.sub));return[i,o]})),N=class{constructor(n={},t={}){this.options=y(t,L),this.map=Q(Object.entries(n),this.options.caseSensitive),this.mapAliased=O(this.map)}getAll(){return{map:this.map,mapAliased:this.mapAliased}}getCommand(n,t=[]){if(n.length<1)throw new Error("Path does not contain at least one item");const s=this.options.caseSensitive?n[0]:n[0].toLowerCase(),i=t;if(!this.mapAliased.has(s))return{success:!1,error:{type:"missingCommand",missing:[s],similar:j(s,Array.from(this.mapAliased.keys()))},path:i};const o=this.mapAliased.get(s),c=n.slice(1);if(i.push(s),n.length>1&&null!==o.sub){const n=o.sub.getCommand(c,i);if(n.success)return n}return{success:!0,command:o,path:i,pathDangling:c}}parse(n){const t=D(n,this.options.validQuotes),s=this.getCommand(t);if(!s.success)return s;const i=s.command,o=s.pathDangling,c=S(i.args,o);return 0!==c.missing.length?{success:!1,error:{type:"missingArg",missing:c.missing}}:(s.args=c.args,s)}};return N}();
//# sourceMappingURL=clingy.min.js.map
