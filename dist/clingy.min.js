var Clingy=function(){"use strict";const n=(n,t)=>typeof n===t,t=Array.isArray,s=t=>n(t,"undefined"),i=n=>null==n,o=t=>!i(t)&&n(t,"object"),e=t=>n(t,"string"),r=(n,t)=>{Object.entries(n).forEach((s,i)=>{t(s[0],s[1],i,n)})},c=(n,t)=>{const s=n.length;const i=t.length;if(0===s)return i;if(0===i)return s;const o=[];for(let n=0;n<=i;n++)o[n]=[n];for(let n=0;n<=s;n++)o[0][n]=n;for(let e=1;e<=i;e++){const i=o[e],r=o[e-1];for(let o=1;o<=s;o++)if(t.charAt(e-1)===n.charAt(o-1))i[o]=r[o-1];else{const n=r[o-1]+1,t=i[o-1]+1,s=r[o]+1;i[o]=Math.min(n,t,s)}}return o[i][s]},a=(n,t)=>{const s=new Map;n.forEach((i,o)=>{const e=t(i,o,n);s.set(e,s.has(e)?[...s.get(e),i]:[i])});return s},u=(n,t,s=!1)=>{const i=a(t,t=>c(n,t));return s?i:i.get(Math.min(...i.keys()))},f=n=>Object.assign({},n),h=(n,i)=>{const o=t(n)?Array.from(n):f(n);r(i,(t,i)=>{s(n[t])&&(o[t]=i)});return o},l=(n,i)=>{const e=t(n)?Array.from(n):f(n);r(i,(t,i)=>{const r=n[t];o(i)?e[t]=o(r)?l(r,i):i:e[t]=s(r)?i:r});return e},m=n=>{const t=new Map(n);n.forEach(n=>{n.alias.forEach(s=>{if(t.has(s))throw new Error(`Alias ${s} conflicts with a previously defined key`);t.set(s,n)})});return t},g=(n,t)=>{const s={args:{_all:t},missing:[]};n.forEach((n,i)=>{const o=t[i];o?s.args[n.name]=o:n.required?s.missing.push(n):s.args[n.name]=n.default});return s},p=n=>({name:`arg${n}`,required:!0,default:null}),d=n=>({name:`command${n}`,fn:()=>{},alias:[],args:[],sub:null}),A=(n,t)=>new Map(n.map((n,s)=>{if(!e(n[0]))throw new TypeError(`command key '${n[0]}' is not a string`);const i=t?n[0]:n[0].toLowerCase();const o=l(n[1],d(s));o.name=i;o.args=o.args.map((n,t)=>h(n,p(t)));null!==o.sub&&(o.sub=new v(o.sub));return[i,o]})),y=/\s/,w=(n,t)=>{const s=[];let i=[];let o=!1;n.split("").forEach((e,r)=>{const c=y.test(e);t.includes(e)?o=!o:!o&&c||i.push(e);(i.length>0&&c&&!o||r===n.length-1)&&(s.push(i.join("")),i=[])});return s},b=(n,t)=>{const s=n.trim();return null!==t?w(s,t):s.split(y)},E={caseSensitive:!0,validQuotes:['"']},v=class{constructor(n,t={}){this.options=l(t,E),this.map=A(Object.entries(n),this.options.caseSensitive),this.mapAliased=m(this.map)}getAll(){return{map:this.map,mapAliased:this.mapAliased}}getCommand(n,t=[]){if(n.length<1)throw new TypeError("Path does not contain at least one item");const s=this.options.caseSensitive?n[0]:n[0].toLowerCase(),i=t;if(!this.mapAliased.has(s))return{success:!1,error:{type:"missingCommand",missing:[s],similar:u(s,Array.from(this.mapAliased.keys()))},path:i};const o=this.mapAliased.get(s),e=n.slice(1);if(i.push(s),n.length>1&&null!==o.sub){const n=o.sub.getCommand(e,i);if(n.success)return n}return{success:!0,command:o,path:i,pathDangling:e}}parse(n){const t=b(n,this.options.validQuotes),s=this.getCommand(t);if(!s.success)return s;const i=s.command,o=s.pathDangling,e=g(i.args,o);return 0!==e.missing.length?{success:!1,error:{type:"missingArg",missing:e.missing}}:(s.args=e.args,s)}};return v}();
//# sourceMappingURL=clingy.min.js.map
