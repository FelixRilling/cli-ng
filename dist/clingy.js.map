{"version":3,"file":"clingy.js","sources":["esm/src/lookup/CaseSensitivity.js","esm/src/command/CommandMap.js","../node_modules/logby/dist/esm/src/level/Levels.js","../node_modules/logby/dist/esm/src/appender/defaultLoggingAppender.js","../node_modules/lightdash/dist/esm/src/string/distance.js","../node_modules/lightdash/dist/esm/src/array/groupMapReducingBy.js","../node_modules/lightdash/dist/esm/src/array/groupMapBy.js","../node_modules/lightdash/dist/esm/src/string/similar.js","../node_modules/lightdash/dist/esm/src/object/name.js","../node_modules/logby/dist/esm/src/level/matchesLevel.js","../node_modules/logby/dist/esm/src/logger/DefaultLogger.js","../node_modules/logby/dist/esm/src/Logby.js","esm/src/logger.js","esm/src/lookup/ArgumentResolving.js","esm/src/argument/ArgumentMatcher.js","esm/src/command/util/commandUtil.js","esm/src/lookup/result/LookupResult.js","esm/src/lookup/LookupResolver.js","esm/src/parser/InputParser.js","esm/src/Clingy.js"],"sourcesContent":["var CaseSensitivity;\n(function (CaseSensitivity) {\n    CaseSensitivity[CaseSensitivity[\"SENSITIVE\"] = 0] = \"SENSITIVE\";\n    CaseSensitivity[CaseSensitivity[\"INSENSITIVE\"] = 1] = \"INSENSITIVE\";\n})(CaseSensitivity || (CaseSensitivity = {}));\nexport { CaseSensitivity };\n//# sourceMappingURL=CaseSensitivity.js.map","import { forEach, isMap, isObject, isPlainObject } from \"lodash\";\nimport { Clingy } from \"../Clingy\";\nimport { CaseSensitivity } from \"../lookup/CaseSensitivity\";\n/**\n * Map containing {@link Command}s.\n *\n * @private\n */\nclass CommandMap extends Map {\n    constructor(input) {\n        super(CommandMap.getConstructorMap(input));\n    }\n    /**\n     * Creates a new instance with {@link Clingy} options to inherit.\n     *\n     * @param commands Command input to use.\n     * @param options Options for the Clingy instance.\n     */\n    static createWithOptions(commands, options) {\n        if (isMap(commands)) {\n            commands.forEach(val => CommandMap.createWithOptionsHelper(val, options));\n        }\n        else if (isPlainObject(commands)) {\n            forEach(commands, val => CommandMap.createWithOptionsHelper(val, options));\n        }\n        return new CommandMap(commands);\n    }\n    static createWithOptionsHelper(command, options) {\n        if (isPlainObject(command.sub) || isMap(command.sub)) {\n            command.sub = new Clingy(CommandMap.createWithOptions(command.sub, options), options);\n        }\n    }\n    static getConstructorMap(input) {\n        if (isMap(input)) {\n            return Array.from(input.entries());\n        }\n        if (isObject(input)) {\n            return Array.from(Object.entries(input));\n        }\n        return null;\n    }\n    /**\n     * Checks if the map contains a key, ignoring case.\n     *\n     * @param key Key to check for.\n     * @param caseSensitivity Case sensitivity to use.\n     * @return If the map contains a key, ignoring case.\n     */\n    hasCommand(key, caseSensitivity) {\n        if (caseSensitivity === CaseSensitivity.INSENSITIVE) {\n            return Array.from(this.keys())\n                .map(k => k.toLowerCase())\n                .includes(key.toLowerCase());\n        }\n        return this.has(key);\n    }\n    /**\n     * Returns the value for the key, ignoring case.\n     *\n     * @param key Key to check for.\n     * @param caseSensitivity Case sensitivity to use.\n     * @return The value for the key, ignoring case.\n     */\n    getCommand(key, caseSensitivity) {\n        if (caseSensitivity === CaseSensitivity.INSENSITIVE) {\n            let result = null;\n            this.forEach((value, k) => {\n                if (key.toLowerCase() === k.toLowerCase()) {\n                    result = value;\n                }\n            });\n            return result;\n        }\n        // Return null instead of undefined to be backwards compatible.\n        return this.has(key) ? this.get(key) : null;\n    }\n}\nexport { CommandMap };\n//# sourceMappingURL=CommandMap.js.map","/**\n * Default level-list. Can be used to set the level of a {@link Logby} instance.\n *\n * @public\n */\nconst Levels = {\n    NONE: {\n        val: -1\n    },\n    ERROR: {\n        name: \"ERROR\",\n        val: 0\n    },\n    WARN: {\n        name: \"WARN\",\n        val: 1\n    },\n    INFO: {\n        name: \"INFO\",\n        val: 2\n    },\n    DEBUG: {\n        name: \"DEBUG\",\n        val: 3\n    },\n    TRACE: {\n        name: \"TRACE\",\n        val: 4\n    }\n};\nexport { Levels };\n//# sourceMappingURL=Levels.js.map","import { Levels } from \"../level/Levels\";\n/**\n * Helper method for creating log entry prefix.\n *\n * @private\n * @param name Name of the logger instance.\n * @param level Level of the entry to log.\n * @returns Log entry prefix.\n */\nconst createDefaultLogPrefix = (name, level) => `${new Date().toISOString()} ${level.name} ${name}`;\n/**\n * Default appender, doing the actual logging.\n *\n * @public\n * @param name Name of the logger instance.\n * @param level Level of the entry to log.\n * @param args Arguments to log.\n */\nconst defaultLoggingAppender = (name, level, args) => {\n    let loggerFn = console.log;\n    if (level === Levels.ERROR) {\n        loggerFn = console.error;\n    }\n    else if (level === Levels.WARN) {\n        loggerFn = console.warn;\n    }\n    else if (level === Levels.INFO) {\n        loggerFn = console.info;\n    }\n    loggerFn(createDefaultLogPrefix(name, level), ...args);\n};\nexport { defaultLoggingAppender, createDefaultLogPrefix };\n//# sourceMappingURL=defaultLoggingAppender.js.map","// Noinspection SpellCheckingInspection\n/**\n * Returns the levenshtein string distance of two strings.\n *\n * @since 6.3.0\n * @memberOf String\n * @param str1 First string to compare.\n * @param str2 Second string to compare.\n * @returns Distance between the two strings.\n * @example\n * distance(\"Kitten\", \"Sitting\")\n * // => 3\n *\n * distance(\"String\", \"Stribng\")\n * // => 1\n *\n * distance(\"foo\", \"foo\")\n * // => 0\n */\nconst distance = (str1, str2) => {\n    if (str1.length === 0) {\n        return str2.length;\n    }\n    if (str2.length === 0) {\n        return str1.length;\n    }\n    const matrix = [];\n    for (let y = 0; y <= str2.length; y++) {\n        matrix[y] = [y];\n    }\n    for (let x = 0; x <= str1.length; x++) {\n        matrix[0][x] = x;\n    }\n    for (let y = 1; y <= str2.length; y++) {\n        const matrixColumnCurrent = matrix[y];\n        const matrixColumnLast = matrix[y - 1];\n        for (let x = 1; x <= str1.length; x++) {\n            if (str2.charAt(y - 1) === str1.charAt(x - 1)) {\n                matrixColumnCurrent[x] = matrixColumnLast[x - 1];\n            }\n            else {\n                const substitution = matrixColumnLast[x - 1] + 1;\n                const insertion = matrixColumnCurrent[x - 1] + 1;\n                const deletion = matrixColumnLast[x] + 1;\n                matrixColumnCurrent[x] = Math.min(substitution, insertion, deletion);\n            }\n        }\n    }\n    return matrix[str2.length][str1.length];\n};\nexport { distance };\n//# sourceMappingURL=distance.js.map","import { forEach } from \"lodash\";\n/**\n * Collects elements in an array into a an array of merged elements.\n *\n * @since 11.0.0\n * @memberOf Array\n * @param collection Collection to group.\n * @param keyProducer Function returning the key for the value.\n * @param initializer Function initializing a new mergable object.\n * @param reducer Consumer mutating the existing object with the new data.\n * @returns Grouped and merged map.\n * @example\n * groupMapReducingBy(\n *     [\"foo\", \"bar\", \"fizz\", \"buzz\"],\n *     val => val.charAt(0),\n *     () => {\n *        return {\n *            count: 0,\n *            matches: []\n *        };\n *     },\n *     (current, val) => {\n *         current.count++;\n *         current.matches.push(val);\n *         return current;\n *     }\n * )\n * // => Map{\"f\": {count: 2, matches: [\"foo\", \"fizz\"]}, \"b\": {count: 2, matches: [\"bar\", \"buzz\"]}}\n */\nconst groupMapReducingBy = (collection, keyProducer, initializer, reducer) => {\n    const result = new Map();\n    forEach(collection, (value, index) => {\n        const key = keyProducer(value, index, collection);\n        if (!result.has(key)) {\n            result.set(key, initializer(value, index, collection));\n        }\n        result.set(key, reducer(result.get(key), value, index, collection));\n    });\n    return result;\n};\nexport { groupMapReducingBy };\n//# sourceMappingURL=groupMapReducingBy.js.map","import { concat } from \"lodash\";\nimport { groupMapReducingBy } from \"./groupMapReducingBy\";\n/**\n * Collects the values of an array in a map as array values,\n * using the return value of the function as key.\n *\n * @since 6.1.0\n * @memberOf Array\n * @param collection Collection to group.\n * @param keyFn Function to use for grouping.\n * @returns Grouped map.\n * @example\n * groupMapBy([1, 2, 3, 4, 5], val => val % 2)\n * // => Map{0: [2, 4], 1: [1, 3, 5]}\n */\nconst groupMapBy = (collection, keyFn) => groupMapReducingBy(collection, keyFn, () => [], (current, value) => concat(current, value));\nexport { groupMapBy };\n//# sourceMappingURL=groupMapBy.js.map","import { groupMapBy } from \"../array/groupMapBy\";\nimport { distance } from \"./distance\";\n// Noinspection SpellCheckingInspection\n/**\n * Returns strings similar to the input based its levenshtein distance to the values in the list given.\n *\n * @since 6.3.0\n * @memberOf String\n * @param str String to check.\n * @param collection Array of values to compare the string to.\n * @param returnFull If the full map should be returned, rather than just the closest matches.\n * @returns Array of the closest matches, or the map if `returnFull` is true.\n * @example\n * similar(\"Fob\", [\"Foo\", \"Bar\"])\n * // => [\"Foo\"]\n *\n * similar(\"cmmit\", [\"init\", \"commit\", \"push\"])\n * // => [\"commit\"]\n *\n * similar(\"Kitten\", [\"Sitten\", \"Sitting\", \"Bitten\"])\n * // => [\"Sitten\", \"Bitten\"]\n *\n * similar(\"cmmit\", [\"init\", \"commit\", \"push\"], true)\n * // => Map<number, string[]>{1: [\"commit\"], 3: [\"init\"], 5: [\"push\"]}\n */\nconst similar = (str, collection, returnFull = false) => {\n    const result = groupMapBy(collection, (value) => distance(str, value));\n    if (returnFull) {\n        return result;\n    }\n    const lowestKey = Math.min(...result.keys());\n    return result.get(lowestKey);\n};\nexport { similar };\n//# sourceMappingURL=similar.js.map","import { isObject, isString, isSymbol } from \"lodash\";\n/**\n * Gets name of a value.\n *\n * If the value has a name or description property, the value of that is returned.\n * If the value is a string, it is returned as is.\n * Otherwise null is returned.\n *\n * @since 10.2.0\n * @memberOf Object\n * @param value Value to check.\n * @returns The name of the value.\n * @example\n * name(class Foo{})\n * // => \"Foo\"\n *\n * name(function bar(){})\n * // => \"bar\"\n *\n * name(Symbol(\"abc\"))\n * // => \"abc\"\n *\n * name(\"foo\")\n * // => \"foo\"\n *\n * name(1)\n * // => null\n */\nconst name = (value) => {\n    if (isString(value)) {\n        return value;\n    }\n    // eslint-disable-next-line no-extra-parens\n    if (isObject(value) && isString(value.name)) {\n        // eslint-disable-next-line no-extra-parens\n        return value.name;\n    }\n    if (isSymbol(value) && isString(value.description)) {\n        return value.description;\n    }\n    return null;\n};\nexport { name };\n//# sourceMappingURL=name.js.map","/**\n * Checks if the given level is considered part of the active level.\n *\n * @private\n * @param incoming Level to check.\n * @param active level to check against.\n * @returns if the given level matches the active level.\n */\nconst matchesLevel = (incoming, active) => incoming.val <= active.val;\nexport { matchesLevel };\n//# sourceMappingURL=matchesLevel.js.map","import { Levels } from \"../level/Levels\";\nimport { matchesLevel } from \"../level/matchesLevel\";\n/**\n * Default {@link Logger} class.\n *\n * @private\n */\nclass DefaultLogger {\n    /**\n     * Creates a new {@link DefaultLogger}.\n     * Should not be constructed directly, rather use {@link Logby.getLogger}.\n     *\n     * @public\n     * @param root Root logger of this logger.\n     * @param name Name of the logger.\n     */\n    constructor(root, name) {\n        this.root = root;\n        this.name = name;\n    }\n    /**\n     * Logs a message.\n     *\n     * @public\n     * @param level Levels of the log.\n     * @param args Arguments to be logged.\n     */\n    log(level, ...args) {\n        if (this.root.level.val >= level.val) {\n            this.root.appenders.forEach(fn => fn(this.name, level, args));\n        }\n    }\n    /**\n     * Logs an error.\n     *\n     * @public\n     * @param args Arguments to be logged.\n     */\n    error(...args) {\n        this.log(Levels.ERROR, ...args);\n    }\n    /**\n     * Logs a warning.\n     *\n     * @public\n     * @param args Arguments to be logged.\n     */\n    warn(...args) {\n        this.log(Levels.WARN, ...args);\n    }\n    /**\n     * Logs an info.\n     *\n     * @public\n     * @param args Arguments to be logged.\n     */\n    info(...args) {\n        this.log(Levels.INFO, ...args);\n    }\n    /**\n     * Logs a debug message.\n     *\n     * @public\n     * @param args Arguments to be logged.\n     */\n    debug(...args) {\n        this.log(Levels.DEBUG, ...args);\n    }\n    /**\n     * Logs a trace message.\n     *\n     * @public\n     * @param args Arguments to be logged.\n     */\n    trace(...args) {\n        this.log(Levels.TRACE, ...args);\n    }\n    /**\n     * Checks if the currently set log level includes error logging.\n     *\n     * @public\n     * @returns if the currently set log level includes error logging.\n     */\n    isError() {\n        return matchesLevel(Levels.ERROR, this.root.level);\n    }\n    /**\n     * Checks if the currently set log level includes warning logging.\n     *\n     * @public\n     * @returns if the currently set log level includes warning logging.\n     */\n    isWarn() {\n        return matchesLevel(Levels.WARN, this.root.level);\n    }\n    /**\n     * Checks if the currently set log level includes info logging.\n     *\n     * @public\n     * @returns if the currently set log level includes info logging.\n     */\n    isInfo() {\n        return matchesLevel(Levels.INFO, this.root.level);\n    }\n    /**\n     * Checks if the currently set log level includes debug logging.\n     *\n     * @public\n     * @returns if the currently set log level includes debug logging.\n     */\n    isDebug() {\n        return matchesLevel(Levels.DEBUG, this.root.level);\n    }\n    /**\n     * Checks if the currently set log level includes trace logging.\n     *\n     * @public\n     * @returns if the currently set log level includes trace logging.\n     */\n    isTrace() {\n        return matchesLevel(Levels.TRACE, this.root.level);\n    }\n}\nexport { DefaultLogger };\n//# sourceMappingURL=DefaultLogger.js.map","import { name } from \"lightdash\";\nimport { defaultLoggingAppender } from \"./appender/defaultLoggingAppender\";\nimport { Levels } from \"./level/Levels\";\nimport { DefaultLogger } from \"./logger/DefaultLogger\";\n/**\n * Main logby class.\n */\nclass Logby {\n    /**\n     * Creates a new Logby instance.\n     */\n    constructor() {\n        this.loggers = new Map();\n        this.appenders = new Set([defaultLoggingAppender]);\n        this.level = Levels.INFO;\n    }\n    /**\n     * Gets and/or creates a logger instance.\n     *\n     * @param nameable String or INameable (ex: named class or named function).\n     * @returns The logger instance.\n     */\n    getLogger(nameable) {\n        const loggerName = name(nameable);\n        if (loggerName == null) {\n            throw new TypeError(`'${nameable}' is neither an INameable nor a string.`);\n        }\n        if (!this.loggers.has(loggerName)) {\n            const logger = new DefaultLogger(this, loggerName);\n            this.loggers.set(loggerName, logger);\n        }\n        return this.loggers.get(loggerName);\n    }\n}\nexport { Logby };\n//# sourceMappingURL=Logby.js.map","import { Logby } from \"logby\";\nconst clingyLogby = new Logby();\nexport { clingyLogby };\n//# sourceMappingURL=logger.js.map","var ArgumentResolving;\n(function (ArgumentResolving) {\n    ArgumentResolving[ArgumentResolving[\"RESOLVE\"] = 0] = \"RESOLVE\";\n    ArgumentResolving[ArgumentResolving[\"IGNORE\"] = 1] = \"IGNORE\";\n})(ArgumentResolving || (ArgumentResolving = {}));\nexport { ArgumentResolving };\n//# sourceMappingURL=ArgumentResolving.js.map","import { isNil } from \"lodash\";\nimport { clingyLogby } from \"../logger\";\n/**\n * Orchestrates mapping of {@link Argument}s to user-provided input.\n *\n * @private\n */\nclass ArgumentMatcher {\n    /**\n     * Matches a list of {@link Argument}s to a list of string input arguments.\n     *\n     * @param expected {@link Argument} list of a {@link ICommand}\n     * @param provided List of user-provided arguments.\n     */\n    constructor(expected, provided) {\n        this.missing = [];\n        this.result = new Map();\n        ArgumentMatcher.logger.debug(\"Matching arguments:\", expected, provided);\n        expected.forEach((expectedArg, i) => {\n            if (i < provided.length) {\n                const providedArg = provided[i];\n                ArgumentMatcher.logger.trace(`Found matching argument for ${expectedArg.name}, adding to result: ${providedArg}`);\n                this.result.set(expectedArg.name, providedArg);\n            }\n            else if (expectedArg.required) {\n                ArgumentMatcher.logger.trace(`No matching argument found for ${expectedArg.name}, adding to missing.`);\n                this.missing.push(expectedArg);\n            }\n            else if (!isNil(expectedArg.defaultValue)) {\n                ArgumentMatcher.logger.trace(`No matching argument found for ${expectedArg.name}, using default: ${expectedArg.defaultValue}`);\n                this.result.set(expectedArg.name, expectedArg.defaultValue);\n            }\n            else {\n                ArgumentMatcher.logger.trace(`No matching argument found for ${expectedArg.name}, using null.`);\n                this.result.set(expectedArg.name, null);\n            }\n        });\n        ArgumentMatcher.logger.debug(`Finished matching arguments: ${expected.length} expected, ${this.result.size} found and ${this.missing.length} missing.`);\n    }\n}\nArgumentMatcher.logger = clingyLogby.getLogger(ArgumentMatcher);\nexport { ArgumentMatcher };\n//# sourceMappingURL=ArgumentMatcher.js.map","import { similar } from \"lightdash\";\n/**\n * Gets similar keys of a key based on their string distance.\n *\n * @private\n * @param mapAliased Map to use for lookup.\n * @param name       Key to use.\n * @return List of similar keys.\n */\nconst getSimilar = (mapAliased, name) => similar(name, Array.from(mapAliased.keys()), false);\nexport { getSimilar };\n//# sourceMappingURL=commandUtil.js.map","var ResultType;\n(function (ResultType) {\n    ResultType[ResultType[\"SUCCESS\"] = 0] = \"SUCCESS\";\n    ResultType[ResultType[\"ERROR_NOT_FOUND\"] = 1] = \"ERROR_NOT_FOUND\";\n    ResultType[ResultType[\"ERROR_MISSING_ARGUMENT\"] = 2] = \"ERROR_MISSING_ARGUMENT\";\n})(ResultType || (ResultType = {}));\nexport { ResultType };\n//# sourceMappingURL=LookupResult.js.map","import { isNil } from \"lodash\";\nimport { ArgumentMatcher } from \"../argument/ArgumentMatcher\";\nimport { Clingy } from \"../Clingy\";\nimport { getSimilar } from \"../command/util/commandUtil\";\nimport { clingyLogby } from \"../logger\";\nimport { ArgumentResolving } from \"./ArgumentResolving\";\nimport { CaseSensitivity } from \"./CaseSensitivity\";\nimport { ResultType } from \"./result/LookupResult\";\n/**\n * Lookup tools for resolving paths through {@link CommandMap}s.\n *\n * @private\n */\nclass LookupResolver {\n    /**\n     * Creates a new {@link LookupResolver}.\n     *\n     * @param caseSensitive If the lookup should honor case.\n     */\n    constructor(caseSensitive = true) {\n        this.caseSensitivity = caseSensitive\n            ? CaseSensitivity.SENSITIVE\n            : CaseSensitivity.INSENSITIVE;\n    }\n    static createSuccessResult(pathNew, pathUsed, command, args) {\n        const lookupSuccess = {\n            successful: true,\n            pathUsed,\n            pathDangling: pathNew,\n            type: ResultType.SUCCESS,\n            command,\n            args\n        };\n        LookupResolver.logger.debug(\"Returning successful lookup result:\", lookupSuccess);\n        return lookupSuccess;\n    }\n    static createNotFoundResult(pathNew, pathUsed, currentPathFragment, commandMap) {\n        LookupResolver.logger.warn(`Command '${currentPathFragment}' could not be found.`);\n        return {\n            successful: false,\n            pathUsed,\n            pathDangling: pathNew,\n            type: ResultType.ERROR_NOT_FOUND,\n            missing: currentPathFragment,\n            similar: getSimilar(commandMap, currentPathFragment)\n        };\n    }\n    static createMissingArgsResult(pathNew, pathUsed, missing) {\n        LookupResolver.logger.warn(\"Some arguments could not be found:\", missing);\n        return {\n            successful: false,\n            pathUsed,\n            pathDangling: pathNew,\n            type: ResultType.ERROR_MISSING_ARGUMENT,\n            missing\n        };\n    }\n    /**\n     * Resolves a pathUsed through a {@link CommandMap}.\n     *\n     * @param commandMap        Map to use.\n     * @param path              Path to getPath.\n     * @param argumentResolving Strategy for resolving arguments.\n     * @return Lookup result, either {@link LookupSuccess}, {@link LookupErrorNotFound}\n     * or {@link LookupErrorMissingArgs}.\n     */\n    resolve(commandMap, path, argumentResolving) {\n        if (path.length === 0) {\n            throw new Error(\"Path cannot be empty.\");\n        }\n        return this.resolveInternal(commandMap, path, [], argumentResolving);\n    }\n    resolveInternal(commandMap, path, pathUsed, argumentResolving) {\n        const currentPathFragment = path[0];\n        const pathNew = path.slice(1);\n        pathUsed.push(currentPathFragment);\n        if (!this.hasCommand(commandMap, currentPathFragment)) {\n            return LookupResolver.createNotFoundResult(pathNew, pathUsed, currentPathFragment, commandMap);\n        }\n        // We already checked if the key exists, assert its existence.\n        const command = (commandMap.getCommand(currentPathFragment, this.caseSensitivity));\n        LookupResolver.logger.debug(`Found command: '${currentPathFragment}'.`);\n        /*\n         * Recurse into sub-commands if:\n         * Additional items are in the path AND\n         * the current command has sub-commands AND\n         * the sub-commands contain the next path item.\n         */\n        if (pathNew.length > 0 &&\n            command.sub instanceof Clingy &&\n            this.hasCommand(command.sub.mapAliased, pathNew[0])) {\n            return this.resolveInternalSub(pathNew, pathUsed, command, argumentResolving);\n        }\n        /*\n         * Skip checking for arguments if:\n         * The parameter argumentResolving is set to ignore arguments OR\n         * the command has no arguments defined OR\n         * the command has an empty array defined as arguments.\n         */\n        let argumentsResolved;\n        if (argumentResolving === ArgumentResolving.IGNORE ||\n            isNil(command.args) ||\n            command.args.length === 0) {\n            LookupResolver.logger.debug(\"No arguments defined, using empty map.\");\n            argumentsResolved = new Map();\n        }\n        else {\n            LookupResolver.logger.debug(`Looking up arguments: '${pathNew}'.`);\n            const argumentMatcher = new ArgumentMatcher(command.args, pathNew);\n            if (argumentMatcher.missing.length > 0) {\n                return LookupResolver.createMissingArgsResult(pathNew, pathUsed, argumentMatcher.missing);\n            }\n            argumentsResolved = argumentMatcher.result;\n            LookupResolver.logger.debug(\"Successfully looked up arguments: \", argumentsResolved);\n        }\n        return LookupResolver.createSuccessResult(pathNew, pathUsed, command, argumentsResolved);\n    }\n    resolveInternalSub(pathNew, pathUsed, command, argumentResolving) {\n        LookupResolver.logger.debug(\"Resolving sub-commands:\", command.sub, pathNew);\n        return this.resolveInternal(command.sub.mapAliased, pathNew, pathUsed, argumentResolving);\n    }\n    hasCommand(commandMap, pathPart) {\n        return commandMap.hasCommand(pathPart, this.caseSensitivity);\n    }\n}\nLookupResolver.logger = clingyLogby.getLogger(LookupResolver);\nexport { LookupResolver };\n//# sourceMappingURL=LookupResolver.js.map","import { compact } from \"lodash\";\nimport { clingyLogby } from \"../logger\";\n/**\n * Manages parsing input strings into a path list.\n *\n * @private\n */\nclass InputParser {\n    /**\n     * Creates an {@link InputParser}.\n     *\n     * @param legalQuotes List of quotes to use when parsing strings.\n     */\n    constructor(legalQuotes = [\"\\\"\"]) {\n        this.legalQuotes = legalQuotes;\n        this.pattern = this.generateMatcher();\n    }\n    /**\n     * Parses an input string.\n     *\n     * @param input Input string to parse.\n     * @return Path list.\n     */\n    parse(input) {\n        InputParser.logger.debug(`Parsing input '${input}'`);\n        const result = [];\n        const pattern = new RegExp(this.pattern);\n        let match;\n        // Noinspection AssignmentResultUsedJS\n        while ((match = pattern.exec(input))) {\n            InputParser.logger.trace(`Found match '${match}'`);\n            const groups = compact(match.slice(1));\n            if (groups.length > 0) {\n                InputParser.logger.trace(`Found group '${groups[0]}'`);\n                result.push(groups[0]);\n            }\n        }\n        return result;\n    }\n    generateMatcher() {\n        InputParser.logger.debug(\"Creating matcher.\");\n        const matchBase = \"(\\\\S+)\";\n        const matchItems = this.legalQuotes\n            .map((str) => `\\\\${str}`)\n            .map(quote => `${quote}(.+?)${quote}`);\n        matchItems.push(matchBase);\n        let result;\n        try {\n            result = new RegExp(matchItems.join(\"|\"), \"g\");\n        }\n        catch (e) {\n            InputParser.logger.error(\"The parsing pattern is invalid, this should never happen.\", e);\n            throw e;\n        }\n        return result;\n    }\n}\nInputParser.logger = clingyLogby.getLogger(InputParser);\nexport { InputParser };\n//# sourceMappingURL=InputParser.js.map","import { CommandMap } from \"./command/CommandMap\";\nimport { clingyLogby } from \"./logger\";\nimport { ArgumentResolving } from \"./lookup/ArgumentResolving\";\nimport { LookupResolver } from \"./lookup/LookupResolver\";\nimport { InputParser } from \"./parser/InputParser\";\n/**\n * Core {@link Clingy} class, entry point for creation of a new instance.\n */\nclass Clingy {\n    /**\n     * Creates a new {@link Clingy} instance.\n     *\n     * @param commands      Map of commands to create the instance with.\n     * @param options       Option object.\n     */\n    constructor(commands = {}, options = {}) {\n        this.lookupResolver = new LookupResolver(options.caseSensitive);\n        this.inputParser = new InputParser(options.legalQuotes);\n        this.map = CommandMap.createWithOptions(commands, options);\n        this.mapAliased = new CommandMap();\n        this.updateAliases();\n    }\n    /**\n     * Sets a command on this instance.\n     *\n     * @param key Key of the command.\n     * @param command The command.\n     */\n    setCommand(key, command) {\n        this.map.set(key, command);\n        this.updateAliases();\n    }\n    // TODO replace .get() with .getCommand() (breaking)\n    /**\n     * Gets a command from this instance.\n     *\n     * @param key Key of the command.\n     */\n    getCommand(key) {\n        return this.mapAliased.get(key);\n    }\n    // Noinspection JSUnusedGlobalSymbols\n    // TODO replace .has() with .hasCommand() (breaking)\n    /**\n     * Checks if a command on this instance exists for this key.\n     *\n     * @param key Key of the command.\n     */\n    hasCommand(key) {\n        return this.mapAliased.has(key);\n    }\n    // Noinspection JSUnusedGlobalSymbols\n    /**\n     * Checks if a pathUsed resolves to a command.\n     *\n     * @param path Path to look up.\n     * @return If the pathUsed resolves to a command.\n     */\n    hasPath(path) {\n        return this.getPath(path).successful;\n    }\n    /**\n     * Resolves a pathUsed to a command.\n     *\n     * @param path Path to look up.\n     * @return Lookup result, either {@link ILookupSuccess} or {@link ILookupErrorNotFound}.\n     */\n    getPath(path) {\n        Clingy.logger.debug(`Resolving pathUsed: ${path}`);\n        return this.lookupResolver.resolve(this.mapAliased, path, ArgumentResolving.IGNORE);\n    }\n    /**\n     * Parses a string into a command and arguments.\n     *\n     * @param input String to parse.\n     * @return Lookup result, either {@link ILookupSuccess}, {@link ILookupErrorNotFound}\n     * or {@link ILookupErrorMissingArgs}.\n     */\n    parse(input) {\n        Clingy.logger.debug(`Parsing input: '${input}'`);\n        return this.lookupResolver.resolve(this.mapAliased, this.inputParser.parse(input), ArgumentResolving.RESOLVE);\n    }\n    /**\n     * @private\n     */\n    updateAliases() {\n        Clingy.logger.debug(\"Updating aliased map.\");\n        this.mapAliased.clear();\n        this.map.forEach((value, key) => {\n            this.mapAliased.set(key, value);\n            value.alias.forEach(alias => {\n                if (this.mapAliased.has(alias)) {\n                    Clingy.logger.warn(`Alias '${alias}' conflicts with a previously defined key, will be ignored.`);\n                }\n                else {\n                    Clingy.logger.trace(`Created alias '${alias}' for '${key}'`);\n                    this.mapAliased.set(alias, value);\n                }\n            });\n        });\n        Clingy.logger.debug(\"Done updating aliased map.\");\n    }\n}\nClingy.logger = clingyLogby.getLogger(Clingy);\nexport { Clingy };\n//# sourceMappingURL=Clingy.js.map"],"names":["isMap","isPlainObject","forEach","isObject","concat","isString","isSymbol","isNil","compact"],"mappings":"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"}