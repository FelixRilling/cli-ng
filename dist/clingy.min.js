var clingy=function(){"use strict";const n=(n,t)=>{const s=n.length;const i=t.length;if(0===s)return i;if(0===i)return s;{const o=[];for(let n=0;n<=i;n++)o[n]=[n];for(let n=0;n<=s;n++)o[0][n]=n;for(let c=1;c<=i;c++){const i=o[c],u=o[c-1];for(let o=1;o<=s;o++)if(t.charAt(c-1)===n.charAt(o-1))i[o]=u[o-1];else{const n=u[o-1]+1,t=i[o-1]+1,s=u[o]+1;i[o]=Math.min(n,t,s)}}return o[i][s]}},t=(n,t)=>typeof n===t,s=Object,i=Array,o=i.isArray,c=n=>t(n,"undefined"),u=n=>c(n)||null===n,r=n=>!u(n)&&t(n,"object"),e=s.keys,a=s.entries,f=(n,t)=>n.forEach(t),l=(n,t)=>{f(a(n),(s,i)=>{t(s[0],s[1],i,n)})},h=n=>t(n,"string"),m=i.from,g=s.assign,p=n=>o(n)?m(n):g({},n),d=(n,t)=>{const s=p(n);l(t,(t,i)=>{u(n[t])&&(s[t]=i)});return s},A=(n,t)=>{const s=p(n);l(s,(n,i,o)=>{s[n]=t(n,i,o,s)});return s},b=(n,t)=>A(n,(n,s,i,o)=>r(s)?b(s,t):t(n,s,i,o)),w=n=>b(p(n),(n,t)=>r(t)?p(t):t),y=(n,t)=>{const s=w(n);l(t,(t,i)=>{const o=n[t];r(i)?s[t]=r(o)?y(o,i):i:s[t]=u(o)?i:o});return s},E=n=>{const t=e(n).map(n=>Number(n));const s=Math.min(...t);return n[s]},v=(t,s,i=!1)=>{const o={};s.forEach(s=>{const i=n(t,s);o[i]?o[i].push(s):o[i]=[s]});return i?o:E(o)},C=n=>{const t=new Map(n);n.forEach(n=>{n.alias.forEach(s=>{if(t.has(s))throw new Error(`Alias ${s} conflicts with a previously defined key`);t.set(s,n)})});return t},M=(n,t)=>{const s={args:{_all:t},missing:[]};n.forEach((n,i)=>{const o=t[i];o?s.args[n.name]=o:n.required?s.missing.push(n):s.args[n.name]=n.default});return s},j=/\s/,S=(n,t)=>{const s=[];let i=[];let o=!1;n.split("").forEach((c,u)=>{const r=j.test(c);t.includes(c)?o=!o:!o&&r||i.push(c);(i.length>0&&r&&!o||u===n.length-1)&&(s.push(i.join("")),i=[])});return s},k=(n,t)=>{const s=n.trim();return null!==t?S(s,t):s.split(j)},q=n=>({name:`arg${n}`,required:!0,default:null}),D=n=>({name:`command${n}`,fn:null,alias:[],args:[],sub:null}),L={caseSensitive:!0,validQuotes:['"']},Q=(n,t)=>new Map(n.map((n,s)=>{if(!h(n[0]))throw new TypeError(`command key '${n[0]}' is not a string`);const i=t?n[0]:n[0].toLowerCase();const o=y(n[1],D(s));o.name=i;o.args=o.args.map((n,t)=>d(n,q(t)));null!==o.sub&&(o.sub=new N(o.sub));return[i,o]})),N=class{constructor(n,t={}){this.options=y(t,L),this.map=Q(a(n),this.options.caseSensitive),this.mapAliased=C(this.map)}getAll(){return{map:this.map,mapAliased:this.mapAliased}}getCommand(n,t=[]){const s=t,i=this.options.caseSensitive?n[0]:n[0].toLowerCase();if(!this.mapAliased.has(i))return{success:!1,error:{type:"missingCommand",missing:[i],similar:v(i,m(this.mapAliased.keys()))},path:s};const o=this.mapAliased.get(i),c=n.slice(1);if(s.push(i),n.length>1&&null!==o.sub){const n=o.sub.getCommand(c,s);if(n.success)return n}return{success:!0,command:o,path:s,pathDangling:c}}parse(n){const t=k(n,this.options.validQuotes),s=this.getCommand(t);if(!s.success)return s;const i=s.command,o=s.pathDangling,c=M(i.args,o);return 0!==c.missing.length?{success:!1,error:{type:"missingArg",missing:c.missing}}:(s.args=c.args,s)}};return N}();
//# sourceMappingURL=clingy.min.js.map
