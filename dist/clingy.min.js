var clingy=function(){"use strict";const n=(n,t)=>{const i=n.length;const s=t.length;if(0===i)return s;if(0===s)return i;{const o=[];for(let n=0;n<=s;n++)o[n]=[n];for(let n=0;n<=i;n++)o[0][n]=n;for(let c=1;c<=s;c++){const s=o[c],u=o[c-1];for(let o=1;o<=i;o++)if(t.charAt(c-1)===n.charAt(o-1))s[o]=u[o-1];else{const n=u[o-1]+1,t=s[o-1]+1,i=u[o]+1;s[o]=Math.min(n,t,i)}}return o[s][i]}},t=(n,t)=>typeof n===t,i=Object,s=Array,o=s.isArray,c=n=>t(n,"undefined"),u=n=>c(n)||null===n,e=n=>!u(n)&&t(n,"object"),r=i.keys,a=i.entries,f=(n,t)=>n.forEach(t),h=(n,t)=>{f(a(n),(i,s)=>{t(i[0],i[1],s,n)})},l=n=>t(n,"string"),m=s.from,p=i.assign,g=n=>o(n)?m(n):p({},n),d=(n,t)=>{const i=g(n);h(t,(t,s)=>{u(n[t])&&(i[t]=s)});return i},A=(n,t)=>{const i=g(n);h(i,(n,s,o)=>{i[n]=t(n,s,o,i)});return i},b=(n,t)=>A(n,(n,i,s,o)=>e(i)?b(i,t):t(n,i,s,o)),w=n=>b(g(n),(n,t)=>e(t)?g(t):t),y=(n,t)=>{const i=w(n);h(t,(t,s)=>{const o=n[t];e(s)?i[t]=e(o)?y(o,s):s:i[t]=u(o)?s:o});return i},E=n=>{const t=r(n).map(n=>Number(n));const i=Math.min(...t);return n[i]},v=(t,i,s=!1)=>{const o={};i.forEach(i=>{const s=n(t,i);o[s]?o[s].push(i):o[s]=[i]});return s?o:E(o)},C=n=>{const t=new Map(n);n.forEach(n=>{n.alias.forEach(i=>{if(t.has(i))throw new Error(`Alias ${i} conflicts with a previously defined key`);t.set(i,n)})});return t},M=n=>({name:`arg${n}`,required:!0,default:null}),S=n=>({name:`command${n}`,fn:null,alias:[],args:[],sub:null}),j={caseSensitive:!0,validQuotes:['"']},k=(n,t)=>new Map(n.map((n,i)=>{if(!l(n[0]))throw new TypeError(`command key '${n[0]}' is not a string`);const s=t?n[0]:n[0].toLowerCase();const o=y(n[1],S(i));o.name=s;o.args=o.args.map((n,t)=>d(n,M(t)));null!==o.sub&&(o.sub=new L(o.sub));return[s,o]})),L=class{constructor(n,t={}){this.options=y(t,j),this.map=k(a(n),this.options.caseSensitive),this.mapAliased=C(this.map)}getAll(){return{map:this.map,mapAliased:this.mapAliased}}getCommand(n,t=[]){const i=t,s=this.options.caseSensitive?n[0]:n[0].toLowerCase();if(!this.mapAliased.has(s))return{success:!1,error:{type:"missingCommand",missing:s,similar:v(s,m(this.mapAliased.keys()))},path:i};const o=this.mapAliased.get(s),c=n.slice(1);if(i.push(s),n.length>1&&null!==o.sub){const n=o.sub.getCommand(c,i);if(n.success)return n}return{success:!0,command:o,path:i,pathDangling:c}}};return L}();
//# sourceMappingURL=clingy.min.js.map
